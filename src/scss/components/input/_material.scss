// Material input
//
// <div class="material-input">
//    <input class="material-input-field" id="input-010">
//    <span class="material-input-line"></span>
//    <label class="material-input-label" for="input-010">Username</label>
//  </div>
// <div class="material-input is-invalid">
//    <input class="material-input-field" id="input-016" value="contact-john@gmail.com">
//    <span class="material-input-line"></span>
//    <label class="material-input-label" for="input-016">Your email</label>
//    <p class="material-input-error">Text for error message.</p>
//  </div>
// <div class="material-input">
//    <select class="material-input-field" id="input-101">
//        <option></option>
//        <option>Walter - walker@gmail.com</option>
//        <option>John - contact.john-j@gmail.com</option>
//    </select>
//    <span class="material-input-line"></span>
//    <label class="material-input-label" for="input-101">Your account</label>
//  </div>
.material-input {

  $this: &;
  $field: #{$this}-field;
  $label: #{$this}-label;
  $line: #{$this}-line;
  $error: #{$this}-error;
  $help: #{$this}-help;

  @at-root {

    select#{$field} {
      &, ~ #{$label} {
        cursor: pointer;
      }
    }
    #{$field} {
      width: 100%;
      &:focus {
        ~ #{$line} {
          &:after {
            left: 0;
            right: 0;
          }
        }
        ~ #{$label} {
          color: $_color-primary;
          @include mat-label-top;
        }
      }

      // Css3 selector when the attribut value is not empty
      &[value]:not([value=""]) {
        ~ #{$label} {
          @include mat-label-top;
        }
      }
      &:disabled {
        color: lighten(#000, 62%);
        cursor: default;
        ~ #{$line} {
          border-bottom-style: dashed;
        }
        ~ #{$label} {
          cursor: default;
        }
      }
    }

    // .material-input
    // .material-input.has-label
    // .material-input.is-invalid
    #{$this} {
      position: relative;
      padding-top: 20px;

      &.has-label {
        #{$label} {
          @include mat-label-top;
        }
      }
      &.is-invalid {
        #{$label} {
          color: $_color-error;
        }
        #{$line} {
          &:after {
            background: $_color-error;
            left: 0;
            right: 0;
          }
        }
      }
    }

    // Border
    #{$line} {
      display: block;
      position: relative;
      width: 100%;
      height: 1px;
      border-bottom: solid 1px lighten(#000, 75);
      margin-top: 8px;
      &:after {
        content: "";
        position: absolute;
        left: 50%;
        right: 50%;
        bottom: -1px;
        height: 2px;
        @include p(transition, all 0.3s ease);
        background: $_color-primary;
      }
    }

    #{$label} {
      color: lighten(#000, 60);
      position: absolute;
      top: 20px;
      @include p(transition, all 0.3s ease);
      cursor: text;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      max-width: 100%;
    }

    // Error message
    #{$error} {
      font-size: 13px;
      color: $_color-error;
      padding-top: 6px;
    }

    // Help message
    #{$help} {
      padding-top: 6px;
      color: lighten(#000, 54%);
      font-size: 13px;
      font-weight: 500;
    }

  }

}